{
  "hash": "58da0ede8af40abfef562c2371474ad9",
  "result": {
    "markdown": "---\ntitle: \"Draw a Clock Face\"\nauthor: \"Te\"\ndate: \"2022-11-12\"\ncategories: [R, code, ggplot2, life]\n---\n\n\nlibrary in need\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.4.1 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'ggplot2' was built under R version 4.2.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n```\n:::\n\n```{.r .cell-code}\nlibrary(ggrepel)\ntheme_set(theme_minimal())\n```\n:::\n\n\ndata preparation\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#这里理解有点绕弯\n# 1. 从pi/2作为起点是因为正常坐标系和对应的时钟0点位置不同，要旋转pi/2\n# 2.从pi/2顺时针旋转一周应该是 -2 * pi，顺时针意味着负号\n# 3. length.out = 61 这里 从0到60的点一共是 \n#    61个点，点与点之间有60个分化，我们计算的是点坐标，因此要获得这61一个点的坐标位置length.out = 61\n# 4. 同理小时计算的是时间12个分化，计算13个点的坐标length.out = 13\n\ntheta <- seq(pi / 2, -2 * pi + pi / 2 , length.out = 61)\n\nradius <- seq(10, 30, length.out = 60)\nmin_radius <- 30\nhour_radius <- 30\n\nx <- min_radius* cos(theta)\ny <- min_radius * sin(theta)\n\nhour_tick <- seq(pi / 2, -2 * pi + pi / 2, length.out = 13)\n\nhour_x <- hour_radius * cos(hour_tick)\nhour_y <- hour_radius * sin(hour_tick)\n\ndf <- tibble(x, y)\nhour <- tibble(hour_x, hour_y)\n\ncenter <- tibble(x=0,y=0)\n```\n:::\n\n\nplot\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=hour,aes(hour_x, hour_y)) +\n  geom_point(data=df, aes(x, y),color=\"blue\") +\n  geom_path(data=hour,aes(0.5*hour_x, 0.5*hour_y),color=\"blue\") +\n  geom_point(data=hour,aes(0.5*hour_x, 0.5*hour_y),color=\"blue\") +\n  geom_point(size=8,color=\"red\") +\n # geom_path() +\n  geom_text(data=hour,aes(label = c(12,1:11,\"\"))) +\n  geom_point(data=center,aes(x,y),size=4, color=\"black\")+\n  coord_fixed()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n### Online tool\n\n\n<https://www.blocklayer.com/clock-face>\n\n\ndata preparation\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#这里理解有点绕弯\n# 1. 从pi/2作为起点是因为正常坐标系和对应的时钟0点位置不同，要旋转pi/2\n# 2.从pi/2顺时针旋转一周应该是 -2 * pi，顺时针意味着负号\n# 3. length.out = 61 这里 从0到60的点一共是 \n#    61个点，点与点之间有60个分化，我们计算的是点坐标，因此要获得这61一个点的坐标位置length.out = 61\n# 4. 同理小时计算的是时间12个分化，计算13个点的坐标length.out = 13\n\ntheta <- seq(pi / 2, -2 * pi + pi / 2 , length.out = 61)\nradius <- seq(10, 30, length.out = 61)\n\ntheta1 <- seq(pi / 2, -2 * pi + pi / 2 , length.out = 13)\nradius1 <- seq(10, 30, length.out = 13)\nomega <- seq(0, pi  , length.out = 31)\n\n\n\nmin_radius <- 31\nhour_radius <- 31\n\nx <- min_radius* cos(theta)\ny <- min_radius * sin(theta)\n\nhour_tick <- seq(pi / 2, -2 * pi + pi / 2, length.out = 13)\n\nhour_x <- hour_radius * cos(hour_tick)\nhour_y <- hour_radius * sin(hour_tick)\n\ncurl_df <- tibble(x=radius* cos(theta),\n                  y=radius* sin(theta))\n\ncurl_point <- tibble(x=radius1* cos(theta1),\n                  y=radius1* sin(theta1))\ndf <- tibble(x, y)\nhour <- tibble(hour_x, hour_y)\n\ncenter <- tibble(x=0,y=0)\n```\n:::\n\n\nplot\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=hour,aes(hour_x, hour_y)) +\n  geom_abline(intercept = 0, slope = sin(omega)/cos(omega),color=\"gray95\")+\n  geom_abline(intercept = 0, slope = c(0,tan(seq(0,pi,length.out=7))),color=\"#ade8f4\")+\n  geom_point(data=df, aes(x, y),color=\"blue\") +\n  #geom_path(data=hour,aes(0.3*hour_x, 0.3*hour_y),color=\"blue\") +\n  #geom_point(data=hour,aes(0.3*hour_x, 0.3*hour_y),color=\"black\") +\n  geom_point(size=8,color=\"#fc4854\") +\n  #geom_path(data=curl_df,aes(x,y),color=\"blue\") +\n  #geom_point(data=curl_point,aes(x,y),color=\"red\") +\n  #geom_path(data=curl_df,aes(-x,-y),color=\"red\") +\n  #geom_point(data=curl_point,aes(-x,-y),color=\"blue\") +\n  geom_text(data=hour,aes(label = c(12,1:11,\"\"))) +\n  geom_point(data=center,aes(x,y),size=4, color=\"black\")+\n  labs(x=NULL,\n       y=NULL)+\n  coord_fixed()+\n  theme(\n    axis.text.x = element_blank(),\n    axis.text.y = element_blank(),\n    panel.grid = element_blank()\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = hour, aes(hour_x, hour_y, color = factor(hour_y))) +\n  geom_point(data = df, aes(x, y), color = \"black\") +\n  geom_point(size = 12) +\n  geom_text(data = hour, color = \"black\", aes(label = c(\"12\", 1:11, \"\"))) +\n  geom_point(data = center, aes(x, y), size = 4, color = \"black\") +\n  geom_path(data = df, aes(1.07 * x, 1.07 * y), color = \"black\") +\n  geom_path(data = df, aes(0.93 * x, 0.93 * y), color = \"black\") +\n  labs(\n    y = NULL,\n    x = NULL,\n  ) +\n  coord_fixed() +\n  theme(legend.position = \"none\",\n        axis.text.x = element_blank(),\n    axis.text.y = element_blank(),\n    panel.grid = element_blank())\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot() +\n  geom_vline(xintercept = seq(0, 60, by = 1), color = \"gray85\") +\n  geom_vline(xintercept = seq(0, 60, by = 5)) +\n  geom_hline(yintercept = c(28, 30)) +\n  scale_x_continuous(breaks = seq(0, 60, by = 5), labels = c(0:12)) +\n  ylim(0, 31) +\n  labs(\n    y = NULL,\n    x = NULL,\n  ) +\n  coord_polar() +\n  theme(\n    axis.text.x = element_text(size=18),\n    axis.text.y = element_blank(),\n    panel.grid.minor.x = element_blank()\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\nnew plot\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot()+\n  geom_point(data=hour,aes(hour_x, hour_y))+\n  geom_path(data=curl_df,aes(x,y),color=\"blue\") +\n  geom_point(data=curl_point,aes(x,y),color=\"red\") +\n  geom_path(data=curl_df,aes(-x,-y),color=\"red\") +\n  geom_point(data=df, aes(x, y),color=\"black\") +\n  coord_fixed()+\n  theme_void()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}