{
  "hash": "15c22fc97f3953f237e4d5a751b6dd8e",
  "result": {
    "markdown": "---\ntitle: \"R中自动画流程图\"\nauthor: \"Te\"\ndate: \"2022-11-08\"\ncategories: [news, code, analysis]\n---\n\n\n## R中自动画流程图\n\n### DiagrammeR::grViz实践中的应用(初试)\n**分子克隆的一般思路简图**\n\n说明\n\n- 无缝克隆要留有足够的同源序列\n- 平末端可以采用  \n     1. 无缝克隆（保留足够长同源序列）\n     2. T4 ligase克隆（Vector去磷酸化（防止自联）, Insert磷酸化）\n\n> 个人感觉：非常混乱的语言模式，但是又没有什么好的选择\n\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div id=\"htmlwidget-6fb8f67869ae74b67cf0\" style=\"width:100%;height:580px;\" class=\"grViz html-widget\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-6fb8f67869ae74b67cf0\">{\"x\":{\"diagram\":\"\\ndigraph flowchat{\\n\\n  # several \\\"node\\\" statements\\n  node [shape = circle, fontname = Helvetica, fillcolor=\\\"#e9a3c9\\\", color=\\\"#e9a3c9\\\",style=filled]\\n  Vector; Insert\\n  # set other \\\"node\\\"s statements\\n  node [shape = rect, fontname = Helvetica, color=\\\"#a1d76a\\\", fillcolor=\\\"#a1d76a\\\", style=filled]\\n  \\n  # several \\\"edge\\\" statements\\n  edge[color=\\\"#0a9396\\\",style=filled,arrowhead=vee]\\n  \\n  Vector-> \\\"PCR or Synthesis\\\"->Linearized\\n  Linearized->Seamless_Cloning\\n  Vector->\\\"Non-linearized\\\"->Digestion->Purification->Linearized->Ligation\\n  Insert->Sticky_end->Ligation\\n  Insert->Blunt_end -> Seamless_Cloning->New_Plasmid\\n  Ligation->New_Plasmid\\n  \\n  New_Plasmid[fillcolor=\\\"#ffcb77\\\",style=filled,color=\\\"#ffcb77\\\"] \\n  # must add style=filled otherwise does not work with fillcolor\\n  \\n  subgraph {\\n  rank = same; Vector; Insert; }\\n  \\n  subgraph {\\n  rank = same; Linearized; Blunt_end; Sticky_end; }\\n   \\n}\",\"config\":{\"engine\":\"dot\",\"options\":null}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n### Code part\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(DiagrammeR)\n\ngrViz(\"\ndigraph flowchat{\n\n  # several 'node' statements\n  node [shape = circle, fontname = Helvetica, fillcolor='#e9a3c9', color='#e9a3c9',style=filled]\n  Vector; Insert\n  # set other 'node's statements\n  node [shape = rect, fontname = Helvetica, color='#a1d76a', fillcolor='#a1d76a', style=filled]\n  \n  # several 'edge' statements\n  edge[color='#0a9396',style=filled,arrowhead=vee]\n  \n  Vector-> 'PCR or Synthesis'->Linearized\n  Linearized->Seamless_Cloning\n  Vector->'Non-linearized'->Digestion->Purification->Linearized->Ligation\n  Insert->Sticky_end->Ligation\n  Insert->Blunt_end -> Seamless_Cloning->New_Plasmid\n  Ligation->New_Plasmid\n  \n  New_Plasmid[fillcolor='#ffcb77',style=filled,color='#ffcb77'] \n  # must add style=filled otherwise does not work with fillcolor\n  \n  subgraph {\n  rank = same; Vector; Insert; }\n  \n  subgraph {\n  rank = same; Linearized; Blunt_end; Sticky_end; }\n   \n}\",height = 600)\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/htmlwidgets-1.5.4/htmlwidgets.js\"></script>\r\n<script src=\"../../site_libs/viz-1.8.2/viz.js\"></script>\r\n<link href=\"../../site_libs/DiagrammeR-styles-0.2/styles.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/grViz-binding-1.0.9.9000/grViz.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}