[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "少无适俗韵，性本爱丘山",
    "section": "",
    "text": "news\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nNov 8, 2022\n\n\nMe\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nNov 8, 2022\n\n\nTe\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nbiology\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nNov 8, 2022\n\n\nTe\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nNov 8, 2022\n\n\nTe\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nNov 8, 2022\n\n\nTe\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nggplot2\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nNov 8, 2022\n\n\nTe\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\ncloning\n\n\nmolecular biology\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nNov 8, 2022\n\n\nTe\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nNov 8, 2022\n\n\nTe\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nNov 8, 2022\n\n\nHarlow Malloc\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nrmarkdown\n\n\nchinese\n\n\nlatex\n\n\n\n\n\n\n\n\n\n\n\nNov 8, 2022\n\n\nTe\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nsf\n\n\nmap\n\n\nheatmap\n\n\n\n\n\n\n\n\n\n\n\nNov 8, 2022\n\n\nTe\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nNov 8, 2022\n\n\nGuo Te\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nNov 5, 2022\n\n\nTristan O’Malley\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nR\n\n\n\n\n\n\n\n\n\n\n\nOct 25, 2022\n\n\nTe\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nR\n\n\n\n\n\n\n\n\n\n\n\nOct 5, 2022\n\n\nTe\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nR\n\n\n\n\n\n\n\n\n\n\n\nOct 2, 2022\n\n\nTe\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncode\n\n\nmlr3\n\n\nml\n\n\nr\n\n\n\n\n\n\n\n\n\n\n\nInvalid Date\n\n\nTe\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About me",
    "section": "",
    "text": "- Solid foundation in Histology\n - Experienced Molecular Biologist\n - Cancer Research - Liver Cancer\n - Gene therapy - Crispr-Cas related techniques\n - Statistical analysis with R programming\n - FELASA B Certificate"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "1 + 1\n\n[1] 2"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "Since this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/2022-07-07-/UntitledQMD.html",
    "href": "posts/2022-07-07-/UntitledQMD.html",
    "title": "First Post",
    "section": "",
    "text": "磕磕绊绊一路走来，一路如蹒跚学步，依旧不懂的很多。 感谢那些遇到的人，感谢那些或愉快或不怎么愉快的经历。 因为这所有的发生的人事物塑造了今天的我。\n感谢"
  },
  {
    "objectID": "posts/First-Post-with-Quarto/index.html",
    "href": "posts/First-Post-with-Quarto/index.html",
    "title": "First BLOG test with Quarto",
    "section": "",
    "text": "plot(trees)"
  },
  {
    "objectID": "posts/Thanks about Blogdown Blog/index.html",
    "href": "posts/Thanks about Blogdown Blog/index.html",
    "title": "BLOG with blogdown",
    "section": "",
    "text": "终于部署好了自己的博客，感谢 谢益辉和袁凡。\n磕磕绊绊一路走来，一路如蹒跚学步，依旧不懂的很多。 感谢那些遇到的人，感谢那些或愉快或不怎么愉快的经历。 因为这所有的发生的人事物塑造了今天的我。\n感谢"
  },
  {
    "objectID": "posts/ceshi/index.html",
    "href": "posts/ceshi/index.html",
    "title": "gganimate",
    "section": "",
    "text": "library(tidyverse)\nlibrary(gganimate)\nlibrary(ggthemes)\n\ntheme_set(theme_economist_white())\n\nx <- seq(0,15,by=0.1)\ny <- sin(x)+0.8*x+0.1*x^2\ndf1 <- tibble(x,y)\nplot1 <- ggplot(df1,aes(x,y))+\n  geom_line(size=1,color='#e63946')+\n  geom_line(aes(x,1.9*x),size=1,color='black')+\n  geom_point(color='#03045e', alpha=0.5, size=3)+\n  labs(x=\"Time\",\n       y=\"Ability\")\nplot1\n\n\n\n\n\nanimate1 <- plot1 +\n              transition_reveal(x)\nanimate1\n\n`geom_line()`: Each group consists of only one observation.\nℹ Do you need to adjust the group aesthetic?\n`geom_line()`: Each group consists of only one observation.\nℹ Do you need to adjust the group aesthetic?\n`geom_line()`: Each group consists of only one observation.\nℹ Do you need to adjust the group aesthetic?\n`geom_line()`: Each group consists of only one observation.\nℹ Do you need to adjust the group aesthetic?\n\nanimate(animate1, height = 800, width =800)\n\n`geom_line()`: Each group consists of only one observation.\nℹ Do you need to adjust the group aesthetic?\n`geom_line()`: Each group consists of only one observation.\nℹ Do you need to adjust the group aesthetic?\n`geom_line()`: Each group consists of only one observation.\nℹ Do you need to adjust the group aesthetic?\n`geom_line()`: Each group consists of only one observation.\nℹ Do you need to adjust the group aesthetic?\n\n\n\n\nanim_save(\"animate1.gif\", animate1)\n\n`geom_line()`: Each group consists of only one observation.\nℹ Do you need to adjust the group aesthetic?\n`geom_line()`: Each group consists of only one observation.\nℹ Do you need to adjust the group aesthetic?\n`geom_line()`: Each group consists of only one observation.\nℹ Do you need to adjust the group aesthetic?\n`geom_line()`: Each group consists of only one observation.\nℹ Do you need to adjust the group aesthetic?"
  },
  {
    "objectID": "posts/DiagrammR/DiagrammR.html",
    "href": "posts/DiagrammR/DiagrammR.html",
    "title": "R中自动画流程图",
    "section": "",
    "text": "分子克隆的一般思路简图\n说明\n\n无缝克隆要留有足够的同源序列\n平末端可以采用\n\n无缝克隆（保留足够长同源序列）\nT4 ligase克隆（Vector去磷酸化（防止自联）, Insert磷酸化）\n\n\n\n个人感觉：非常混乱的语言模式，但是又没有什么好的选择\n\n\n\n\n\n\n\n\n\n\n\nlibrary(DiagrammeR)\n\ngrViz(\"\ndigraph flowchat{\n\n  # several 'node' statements\n  node [shape = circle, fontname = Helvetica, fillcolor='#e9a3c9', color='#e9a3c9',style=filled]\n  Vector; Insert\n  # set other 'node's statements\n  node [shape = rect, fontname = Helvetica, color='#a1d76a', fillcolor='#a1d76a', style=filled]\n  \n  # several 'edge' statements\n  edge[color='#0a9396',style=filled,arrowhead=vee]\n  \n  Vector-> 'PCR or Synthesis'->Linearized\n  Linearized->Seamless_Cloning\n  Vector->'Non-linearized'->Digestion->Purification->Linearized->Ligation\n  Insert->Sticky_end->Ligation\n  Insert->Blunt_end -> Seamless_Cloning->New_Plasmid\n  Ligation->New_Plasmid\n  \n  New_Plasmid[fillcolor='#ffcb77',style=filled,color='#ffcb77'] \n  # must add style=filled otherwise does not work with fillcolor\n  \n  subgraph {\n  rank = same; Vector; Insert; }\n  \n  subgraph {\n  rank = same; Linearized; Blunt_end; Sticky_end; }\n   \n}\",height = 600)"
  },
  {
    "objectID": "posts/MolecularCloning/index.html",
    "href": "posts/MolecularCloning/index.html",
    "title": "Molecular Cloning Summary",
    "section": "",
    "text": "软件及网络工具：SnapGene , NEB Cloner 等\n连接方式：\n\nGibson Assembly, T4 ligase, Gateway, Infusion, TOPO etc.\n\nGibson Assembly:（5-6个片段连接同样有效，如果受条件制约试剂可以自行配置）\nTEDA Cloning(super-money-saving)\n\n► 优点：No scar, gene 可以连续连接并且没有”接缝”\n► 可以增加序列 也可以删除序列用于制造 将某个基因敲出， 引物合成的时候自然丢掉它\n► 注意点：因为它会将5’端 chowing back ，Vector的线性化是单一酶切位点切开线性化的，请注意它的粘性末端sticky end，5’ overhang 回导致被chowing back and disappear。如果不特意在引物中设计将原有酶切位点序列加以保留，连接后就会损失了这个酶切位点。 Tool box in NEB url: https://nebuilder.neb.com/ （可以选择是否修复酶切位点，in case you lost it for further use）\n► 特殊情况处理：如果遇到不能利用单一酶切位点线性化Vector怎么办?（ 如基因当中存在酶切位点，如果切开Vector同时会导致基因断裂）直接利用Overlap site:homology sequence 进行连接，有些片段可以用PCR的方式（推荐使用高保真Q5 polymerase，但是这个酶合成序列后是Blunt end，如果进一步构建library文库可以用Taq酶+dATP, 加入到PCR纯化后的产物中进行修复A tail, 找不到dATP就用dNTP（ATGC混合物），实际使用上没有差别），或者用单核苷酸序列（Oligos）人工合成序列（合成互补的两条链同时直接加入你想改造的想法：如加入突变的位点或者Kozak序列或者加入Mutiple cloning sites(poly-linker等)，不必一次合成过长价格很贵序列错率高，利用Gibson Assembly的优势分段合成组合即可）\n► Tips:人工合成两条Oligos 你甚至可以直接考虑他们互补配对后自然就有stricky end,这样就省去了PCR->跑胶->切胶纯化的步骤。 此外PCR产物可以考虑使用PCR purification Kit进行纯化，如果模板使用了一个完整的质粒，由于质粒是有甲基化位点的，而PCR没有甲基化位点可以用DpnI 酶先Digestion 然后Heat inactive 进行纯化。（能不跑胶就不要做，浪费时间，最后回收的DNA含有agarose也会影响连接的效率）。 不切的Vector酶的意义,许多人忽略不切Vector酶的意义然而这些酶如果在引物当中引入homology sequence-uncut restiction enzyme site sequece-homology seuquence 利用Gibson Assembly 一连接自然而然加入了克隆位点用于后期加装各种调控元件。"
  },
  {
    "objectID": "posts/MolecularCloning/index.html#t4-ligase-用好了同样很厉害",
    "href": "posts/MolecularCloning/index.html#t4-ligase-用好了同样很厉害",
    "title": "Molecular Cloning Summary",
    "section": "T4 ligase （用好了同样很厉害）",
    "text": "T4 ligase （用好了同样很厉害）\n1.突变及Oligos的使用参考Gibson Assembly的描述\n2.根据条件适度选择Cloning Strategy"
  },
  {
    "objectID": "posts/MolecularCloning/index.html#topo克隆",
    "href": "posts/MolecularCloning/index.html#topo克隆",
    "title": "Molecular Cloning Summary",
    "section": "TOPO克隆",
    "text": "TOPO克隆\n1.为了保真性 用Q5酶PCR 然后用Taq酶修复A tail\n2.TOPO克隆阳性率极好，但注意连入的片段有正向的也有反向的\n3.如果想连接TOPO克隆的两个片段（想法极其罕见，my previous boss did this, because our fusion pcr does not work,actually I feel amazing when he came up with the idea use two reverse oritation amplicons to assemble it together, details show below)\n昨日旧梦，一把辛酸泪！不过虽然结果不好，困苦中终于把克隆基础打的特别扎实！"
  },
  {
    "objectID": "posts/New folder - Copy/index.html",
    "href": "posts/New folder - Copy/index.html",
    "title": "R中自动画流程图",
    "section": "",
    "text": "分子克隆的一般思路简图\n说明\n\n无缝克隆要留有足够的同源序列\n平末端可以采用\n\n无缝克隆（保留足够长同源序列）\nT4 ligase克隆（Vector去磷酸化（防止自联）, Insert磷酸化）\n\n\n\n个人感觉：非常混乱的语言模式，但是又没有什么好的选择\n\n\n\n\n\n\n\n\n\n\n\nlibrary(DiagrammeR)\n\ngrViz(\"\ndigraph flowchat{\n\n  # several 'node' statements\n  node [shape = circle, fontname = Helvetica, fillcolor='#e9a3c9', color='#e9a3c9',style=filled]\n  Vector; Insert\n  # set other 'node's statements\n  node [shape = rect, fontname = Helvetica, color='#a1d76a', fillcolor='#a1d76a', style=filled]\n  \n  # several 'edge' statements\n  edge[color='#0a9396',style=filled,arrowhead=vee]\n  \n  Vector-> 'PCR or Synthesis'->Linearized\n  Linearized->Seamless_Cloning\n  Vector->'Non-linearized'->Digestion->Purification->Linearized->Ligation\n  Insert->Sticky_end->Ligation\n  Insert->Blunt_end -> Seamless_Cloning->New_Plasmid\n  Ligation->New_Plasmid\n  \n  New_Plasmid[fillcolor='#ffcb77',style=filled,color='#ffcb77'] \n  # must add style=filled otherwise does not work with fillcolor\n  \n  subgraph {\n  rank = same; Vector; Insert; }\n  \n  subgraph {\n  rank = same; Linearized; Blunt_end; Sticky_end; }\n   \n}\",height = 600)"
  },
  {
    "objectID": "posts/New folder - Copy (10)/index.html",
    "href": "posts/New folder - Copy (10)/index.html",
    "title": "R中自动画流程图",
    "section": "",
    "text": "分子克隆的一般思路简图\n说明\n\n无缝克隆要留有足够的同源序列\n平末端可以采用\n\n无缝克隆（保留足够长同源序列）\nT4 ligase克隆（Vector去磷酸化（防止自联）, Insert磷酸化）\n\n\n\n个人感觉：非常混乱的语言模式，但是又没有什么好的选择\n\n\n\n\n\n\n\n\n\n\n\nlibrary(DiagrammeR)\n\ngrViz(\"\ndigraph flowchat{\n\n  # several 'node' statements\n  node [shape = circle, fontname = Helvetica, fillcolor='#e9a3c9', color='#e9a3c9',style=filled]\n  Vector; Insert\n  # set other 'node's statements\n  node [shape = rect, fontname = Helvetica, color='#a1d76a', fillcolor='#a1d76a', style=filled]\n  \n  # several 'edge' statements\n  edge[color='#0a9396',style=filled,arrowhead=vee]\n  \n  Vector-> 'PCR or Synthesis'->Linearized\n  Linearized->Seamless_Cloning\n  Vector->'Non-linearized'->Digestion->Purification->Linearized->Ligation\n  Insert->Sticky_end->Ligation\n  Insert->Blunt_end -> Seamless_Cloning->New_Plasmid\n  Ligation->New_Plasmid\n  \n  New_Plasmid[fillcolor='#ffcb77',style=filled,color='#ffcb77'] \n  # must add style=filled otherwise does not work with fillcolor\n  \n  subgraph {\n  rank = same; Vector; Insert; }\n  \n  subgraph {\n  rank = same; Linearized; Blunt_end; Sticky_end; }\n   \n}\",height = 600)"
  },
  {
    "objectID": "posts/New folder - Copy (2)/index.html",
    "href": "posts/New folder - Copy (2)/index.html",
    "title": "R中自动画流程图",
    "section": "",
    "text": "分子克隆的一般思路简图\n说明\n\n无缝克隆要留有足够的同源序列\n平末端可以采用\n\n无缝克隆（保留足够长同源序列）\nT4 ligase克隆（Vector去磷酸化（防止自联）, Insert磷酸化）\n\n\n\n个人感觉：非常混乱的语言模式，但是又没有什么好的选择\n\n\n\n\n\n\n\n\n\n\n\nlibrary(DiagrammeR)\n\ngrViz(\"\ndigraph flowchat{\n\n  # several 'node' statements\n  node [shape = circle, fontname = Helvetica, fillcolor='#e9a3c9', color='#e9a3c9',style=filled]\n  Vector; Insert\n  # set other 'node's statements\n  node [shape = rect, fontname = Helvetica, color='#a1d76a', fillcolor='#a1d76a', style=filled]\n  \n  # several 'edge' statements\n  edge[color='#0a9396',style=filled,arrowhead=vee]\n  \n  Vector-> 'PCR or Synthesis'->Linearized\n  Linearized->Seamless_Cloning\n  Vector->'Non-linearized'->Digestion->Purification->Linearized->Ligation\n  Insert->Sticky_end->Ligation\n  Insert->Blunt_end -> Seamless_Cloning->New_Plasmid\n  Ligation->New_Plasmid\n  \n  New_Plasmid[fillcolor='#ffcb77',style=filled,color='#ffcb77'] \n  # must add style=filled otherwise does not work with fillcolor\n  \n  subgraph {\n  rank = same; Vector; Insert; }\n  \n  subgraph {\n  rank = same; Linearized; Blunt_end; Sticky_end; }\n   \n}\",height = 600)"
  },
  {
    "objectID": "posts/New folder - Copy (3)/index.html",
    "href": "posts/New folder - Copy (3)/index.html",
    "title": "R中自动画流程图",
    "section": "",
    "text": "分子克隆的一般思路简图\n说明\n\n无缝克隆要留有足够的同源序列\n平末端可以采用\n\n无缝克隆（保留足够长同源序列）\nT4 ligase克隆（Vector去磷酸化（防止自联）, Insert磷酸化）\n\n\n\n个人感觉：非常混乱的语言模式，但是又没有什么好的选择\n\n\n\n\n\n\n\n\n\n\n\nlibrary(DiagrammeR)\n\ngrViz(\"\ndigraph flowchat{\n\n  # several 'node' statements\n  node [shape = circle, fontname = Helvetica, fillcolor='#e9a3c9', color='#e9a3c9',style=filled]\n  Vector; Insert\n  # set other 'node's statements\n  node [shape = rect, fontname = Helvetica, color='#a1d76a', fillcolor='#a1d76a', style=filled]\n  \n  # several 'edge' statements\n  edge[color='#0a9396',style=filled,arrowhead=vee]\n  \n  Vector-> 'PCR or Synthesis'->Linearized\n  Linearized->Seamless_Cloning\n  Vector->'Non-linearized'->Digestion->Purification->Linearized->Ligation\n  Insert->Sticky_end->Ligation\n  Insert->Blunt_end -> Seamless_Cloning->New_Plasmid\n  Ligation->New_Plasmid\n  \n  New_Plasmid[fillcolor='#ffcb77',style=filled,color='#ffcb77'] \n  # must add style=filled otherwise does not work with fillcolor\n  \n  subgraph {\n  rank = same; Vector; Insert; }\n  \n  subgraph {\n  rank = same; Linearized; Blunt_end; Sticky_end; }\n   \n}\",height = 600)"
  },
  {
    "objectID": "posts/New folder - Copy (4)/index.html",
    "href": "posts/New folder - Copy (4)/index.html",
    "title": "R中自动画流程图",
    "section": "",
    "text": "分子克隆的一般思路简图\n说明\n\n无缝克隆要留有足够的同源序列\n平末端可以采用\n\n无缝克隆（保留足够长同源序列）\nT4 ligase克隆（Vector去磷酸化（防止自联）, Insert磷酸化）\n\n\n\n个人感觉：非常混乱的语言模式，但是又没有什么好的选择\n\n\n\n\n\n\n\n\n\n\n\nlibrary(DiagrammeR)\n\ngrViz(\"\ndigraph flowchat{\n\n  # several 'node' statements\n  node [shape = circle, fontname = Helvetica, fillcolor='#e9a3c9', color='#e9a3c9',style=filled]\n  Vector; Insert\n  # set other 'node's statements\n  node [shape = rect, fontname = Helvetica, color='#a1d76a', fillcolor='#a1d76a', style=filled]\n  \n  # several 'edge' statements\n  edge[color='#0a9396',style=filled,arrowhead=vee]\n  \n  Vector-> 'PCR or Synthesis'->Linearized\n  Linearized->Seamless_Cloning\n  Vector->'Non-linearized'->Digestion->Purification->Linearized->Ligation\n  Insert->Sticky_end->Ligation\n  Insert->Blunt_end -> Seamless_Cloning->New_Plasmid\n  Ligation->New_Plasmid\n  \n  New_Plasmid[fillcolor='#ffcb77',style=filled,color='#ffcb77'] \n  # must add style=filled otherwise does not work with fillcolor\n  \n  subgraph {\n  rank = same; Vector; Insert; }\n  \n  subgraph {\n  rank = same; Linearized; Blunt_end; Sticky_end; }\n   \n}\",height = 600)"
  },
  {
    "objectID": "posts/New folder - Copy (5)/index.html",
    "href": "posts/New folder - Copy (5)/index.html",
    "title": "R中自动画流程图",
    "section": "",
    "text": "分子克隆的一般思路简图\n说明\n\n无缝克隆要留有足够的同源序列\n平末端可以采用\n\n无缝克隆（保留足够长同源序列）\nT4 ligase克隆（Vector去磷酸化（防止自联）, Insert磷酸化）\n\n\n\n个人感觉：非常混乱的语言模式，但是又没有什么好的选择\n\n\n\n\n\n\n\n\n\n\n\nlibrary(DiagrammeR)\n\ngrViz(\"\ndigraph flowchat{\n\n  # several 'node' statements\n  node [shape = circle, fontname = Helvetica, fillcolor='#e9a3c9', color='#e9a3c9',style=filled]\n  Vector; Insert\n  # set other 'node's statements\n  node [shape = rect, fontname = Helvetica, color='#a1d76a', fillcolor='#a1d76a', style=filled]\n  \n  # several 'edge' statements\n  edge[color='#0a9396',style=filled,arrowhead=vee]\n  \n  Vector-> 'PCR or Synthesis'->Linearized\n  Linearized->Seamless_Cloning\n  Vector->'Non-linearized'->Digestion->Purification->Linearized->Ligation\n  Insert->Sticky_end->Ligation\n  Insert->Blunt_end -> Seamless_Cloning->New_Plasmid\n  Ligation->New_Plasmid\n  \n  New_Plasmid[fillcolor='#ffcb77',style=filled,color='#ffcb77'] \n  # must add style=filled otherwise does not work with fillcolor\n  \n  subgraph {\n  rank = same; Vector; Insert; }\n  \n  subgraph {\n  rank = same; Linearized; Blunt_end; Sticky_end; }\n   \n}\",height = 600)"
  },
  {
    "objectID": "posts/New folder - Copy (6)/index.html",
    "href": "posts/New folder - Copy (6)/index.html",
    "title": "R中自动画流程图",
    "section": "",
    "text": "分子克隆的一般思路简图\n说明\n\n无缝克隆要留有足够的同源序列\n平末端可以采用\n\n无缝克隆（保留足够长同源序列）\nT4 ligase克隆（Vector去磷酸化（防止自联）, Insert磷酸化）\n\n\n\n个人感觉：非常混乱的语言模式，但是又没有什么好的选择\n\n\n\n\n\n\n\n\n\n\n\nlibrary(DiagrammeR)\n\ngrViz(\"\ndigraph flowchat{\n\n  # several 'node' statements\n  node [shape = circle, fontname = Helvetica, fillcolor='#e9a3c9', color='#e9a3c9',style=filled]\n  Vector; Insert\n  # set other 'node's statements\n  node [shape = rect, fontname = Helvetica, color='#a1d76a', fillcolor='#a1d76a', style=filled]\n  \n  # several 'edge' statements\n  edge[color='#0a9396',style=filled,arrowhead=vee]\n  \n  Vector-> 'PCR or Synthesis'->Linearized\n  Linearized->Seamless_Cloning\n  Vector->'Non-linearized'->Digestion->Purification->Linearized->Ligation\n  Insert->Sticky_end->Ligation\n  Insert->Blunt_end -> Seamless_Cloning->New_Plasmid\n  Ligation->New_Plasmid\n  \n  New_Plasmid[fillcolor='#ffcb77',style=filled,color='#ffcb77'] \n  # must add style=filled otherwise does not work with fillcolor\n  \n  subgraph {\n  rank = same; Vector; Insert; }\n  \n  subgraph {\n  rank = same; Linearized; Blunt_end; Sticky_end; }\n   \n}\",height = 600)"
  },
  {
    "objectID": "posts/New folder - Copy (7)/index.html",
    "href": "posts/New folder - Copy (7)/index.html",
    "title": "R中自动画流程图",
    "section": "",
    "text": "分子克隆的一般思路简图\n说明\n\n无缝克隆要留有足够的同源序列\n平末端可以采用\n\n无缝克隆（保留足够长同源序列）\nT4 ligase克隆（Vector去磷酸化（防止自联）, Insert磷酸化）\n\n\n\n个人感觉：非常混乱的语言模式，但是又没有什么好的选择\n\n\n\n\n\n\n\n\n\n\n\nlibrary(DiagrammeR)\n\ngrViz(\"\ndigraph flowchat{\n\n  # several 'node' statements\n  node [shape = circle, fontname = Helvetica, fillcolor='#e9a3c9', color='#e9a3c9',style=filled]\n  Vector; Insert\n  # set other 'node's statements\n  node [shape = rect, fontname = Helvetica, color='#a1d76a', fillcolor='#a1d76a', style=filled]\n  \n  # several 'edge' statements\n  edge[color='#0a9396',style=filled,arrowhead=vee]\n  \n  Vector-> 'PCR or Synthesis'->Linearized\n  Linearized->Seamless_Cloning\n  Vector->'Non-linearized'->Digestion->Purification->Linearized->Ligation\n  Insert->Sticky_end->Ligation\n  Insert->Blunt_end -> Seamless_Cloning->New_Plasmid\n  Ligation->New_Plasmid\n  \n  New_Plasmid[fillcolor='#ffcb77',style=filled,color='#ffcb77'] \n  # must add style=filled otherwise does not work with fillcolor\n  \n  subgraph {\n  rank = same; Vector; Insert; }\n  \n  subgraph {\n  rank = same; Linearized; Blunt_end; Sticky_end; }\n   \n}\",height = 600)"
  },
  {
    "objectID": "posts/New folder - Copy (8)/index.html",
    "href": "posts/New folder - Copy (8)/index.html",
    "title": "R中自动画流程图",
    "section": "",
    "text": "分子克隆的一般思路简图\n说明\n\n无缝克隆要留有足够的同源序列\n平末端可以采用\n\n无缝克隆（保留足够长同源序列）\nT4 ligase克隆（Vector去磷酸化（防止自联）, Insert磷酸化）\n\n\n\n个人感觉：非常混乱的语言模式，但是又没有什么好的选择\n\n\n\n\n\n\n\n\n\n\n\nlibrary(DiagrammeR)\n\ngrViz(\"\ndigraph flowchat{\n\n  # several 'node' statements\n  node [shape = circle, fontname = Helvetica, fillcolor='#e9a3c9', color='#e9a3c9',style=filled]\n  Vector; Insert\n  # set other 'node's statements\n  node [shape = rect, fontname = Helvetica, color='#a1d76a', fillcolor='#a1d76a', style=filled]\n  \n  # several 'edge' statements\n  edge[color='#0a9396',style=filled,arrowhead=vee]\n  \n  Vector-> 'PCR or Synthesis'->Linearized\n  Linearized->Seamless_Cloning\n  Vector->'Non-linearized'->Digestion->Purification->Linearized->Ligation\n  Insert->Sticky_end->Ligation\n  Insert->Blunt_end -> Seamless_Cloning->New_Plasmid\n  Ligation->New_Plasmid\n  \n  New_Plasmid[fillcolor='#ffcb77',style=filled,color='#ffcb77'] \n  # must add style=filled otherwise does not work with fillcolor\n  \n  subgraph {\n  rank = same; Vector; Insert; }\n  \n  subgraph {\n  rank = same; Linearized; Blunt_end; Sticky_end; }\n   \n}\",height = 600)"
  },
  {
    "objectID": "posts/New folder - Copy (9)/index.html",
    "href": "posts/New folder - Copy (9)/index.html",
    "title": "Monty Hall problem",
    "section": "",
    "text": "如果我们只关心能不能得到汽车。\n\n从car 节点上看，keep策略1/3 * 1， switch策略2/3 * 1 .\n\n\n\n\n\n\n\n\n从goat节点上看，keep策略2/3 * 1， switch策略1/3 * 1 .\n\n\n\n\n\n\n\n\n\n三门问题的拓展版\n有三张纸牌：\n纸牌1： 2面都是黑色 card1: black-black\n纸牌2： 2面都是白色 card2: white-white\n纸牌3： 1面是白色，1面是黑色 card3: black-white\n问题：当你随机抽取一张牌看到的是牌面是黑色，请问这张牌背面是白色的概率？答案是1/3.\n\n\n\n\n\n\n当问题不清晰时就用路径分析，反直觉的点就会迎刃而解。"
  },
  {
    "objectID": "posts/New folder - Copy (10) - Copy/index.html",
    "href": "posts/New folder - Copy (10) - Copy/index.html",
    "title": "title change",
    "section": "",
    "text": "添加内容"
  },
  {
    "objectID": "posts/New folder - Copy (11) - Copy/index.html",
    "href": "posts/New folder - Copy (11) - Copy/index.html",
    "title": "title change",
    "section": "",
    "text": "添加内容"
  },
  {
    "objectID": "posts/New folder - Copy (12) - Copy/index.html",
    "href": "posts/New folder - Copy (12) - Copy/index.html",
    "title": "title change",
    "section": "",
    "text": "添加内容"
  },
  {
    "objectID": "posts/New folder - Copy (13) - Copy/index.html",
    "href": "posts/New folder - Copy (13) - Copy/index.html",
    "title": "title change",
    "section": "",
    "text": "添加内容"
  },
  {
    "objectID": "posts/New folder - Copy (9) - Copy/index.html",
    "href": "posts/New folder - Copy (9) - Copy/index.html",
    "title": "title change",
    "section": "",
    "text": "添加内容"
  },
  {
    "objectID": "posts/Monty Hall problem/index.html",
    "href": "posts/Monty Hall problem/index.html",
    "title": "Monty Hall problem",
    "section": "",
    "text": "如果我们只关心能不能得到汽车。\n\n从car 节点上看，keep策略1/3 * 1， switch策略2/3 * 1 .\n\n\n\n\n\n\n\n\n从goat节点上看，keep策略2/3 * 1， switch策略1/3 * 1 .\n\n\n\n\n\n\n\n\n\n三门问题的拓展版\n有三张纸牌：\n纸牌1： 2面都是黑色 card1: black-black\n纸牌2： 2面都是白色 card2: white-white\n纸牌3： 1面是白色，1面是黑色 card3: black-white\n问题：当你随机抽取一张牌看到的是牌面是黑色，请问这张牌背面是白色的概率？答案是1/3.\n\n\n\n\n\n\n当问题不清晰时就用路径分析，反直觉的点就会迎刃而解。"
  },
  {
    "objectID": "posts/Fluorescent Proteins FP/index.html",
    "href": "posts/Fluorescent Proteins FP/index.html",
    "title": "Fluorescent Proteins FP",
    "section": "",
    "text": "Ref:\n\nA guide to choosing fluorescent proteins\nFluorescence-spectraviewer\n\n\n\nFP_best_for_genernal_use -> Genreal_Priciple-> Trial_and_Error\n\n\n\n\nExpress efficiently and without toxicity\nSufficient photostability (stable ~ duration in the experiment)\nFluoresecent proteins(FP) is to be expressed as a fusion protein, FP should not oligomerize(形成低聚物)\nFP should be insensitive to environmental effects.\nFP once being used in multiple-plex experiments should have minimal crosstalk in excitation and emission.\nFRET or selective optical labeling using photocon-vertible FPs.\n\n\n\n\n\nFP vendors is skeptical (claimed brightness may not be real)\nOxygen presence is needed for FPs expressed in living organisms\nTemperature 25 0C or 37 0C (some FPs Temp influenced the expression)\nChaperones(配体) (In bacteria and mammalian cells may differ )"
  },
  {
    "objectID": "posts/ggplot2-MoonPhrase/index.html",
    "href": "posts/ggplot2-MoonPhrase/index.html",
    "title": "MoonPhrase-ggplot2",
    "section": "",
    "text": "# initial configuration\nwindowsFonts()\n\n$serif\n[1] \"TT Times New Roman\"\n\n$sans\n[1] \"TT Arial\"\n\n$mono\n[1] \"TT Courier New\"\n\n# load new font\nsysfonts::font_add_google(\"Roboto\", family = \"Roboto\")\nsysfonts::font_add_google(\"Lato\", family = \"Lato\")\nsysfonts::font_families()\n\n[1] \"sans\"   \"serif\"  \"mono\"   \"Roboto\" \"Lato\"  \n\n# use it\nshowtext::showtext_auto()\n\n\nmoon phrase data\n\nlibrary(suncalc)\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(knitr)\nlibrary(DT)\n\n## use getMoonIllusmination function to get moon fraction, phase, and angle for 2018.\nMoon_2022 <-getMoonIllumination(date = seq.Date(as.Date(\"2022-01-01\"), as.Date(\"2022-12-31\"), by = 1), \n                                 keep = c(\"fraction\", \"phase\", \"angle\"))\n\n\n## Append Extra Info, so I can use ggplot to make calendar. \nMoon_2022_df <- Moon_2022 %>% \n  mutate(wkdy = fct_inorder(weekdays(date, abbreviate=T)), ## 2018 worked well because it starts on Monday\n         wkn = week(date), ## Week Number\n         mo = month(date, label=T, abbr=T), ## Month\n         day = day(date), ## Day\n         moon.phase = cut(#phase,breaks=seq(0,1,by=1/28), ## this doesn't work...\n                          phase,breaks=seq(0,1,by=1/56),\n                          ordered_result=T)) %>%\n  group_by(mo) %>% \n  mutate(wkn.mo = dense_rank(wkn)) %>%\n  ungroup()\n\n## Simply cutting into 28 blocks didn't work out..  \nmoon.font.tb <- tibble(\n  moon.font = c(NA, letters[rep(1:13,rep(2,13))], 0,0, letters[rep(14:26,rep(2,13))],NA),\n  moon.phase = levels(Moon_2022_df$moon.phase)\n)\n\nMoon_2022_df <- Moon_2022_df %>% left_join(moon.font.tb)\n\n## Show the data around today to see what data above looks like.\nMoon_2022_df %>% filter(between(date,today()-3,today()+3)) %>% datatable()\n\n\n\n\n\n\n\n\nmoon phrase data\n\nlibrary(gggibbous)\nMoon_df <- Moon_2022_df %>% filter(date>\"2022-8-25\" & date < \"2022-9-15\")\nMoon_df %>% ggplot(aes(x=date, y=fraction)) + \n  geom_moon(aes(ratio = fraction), size = 18, fill = \"#FFDE00\", color=\"#FFF38C\") +\n    ylim(0,1.05)+\n    theme(\n    panel.grid = element_blank(),\n    axis.ticks = element_blank(),\n    axis.title = element_text(size = 12, family = \"Roboto\"),\n    axis.text.x = element_text(size = 18, family = \"Roboto\", color = \"white\"),\n    axis.text.y = element_blank(),\n    plot.caption = element_text(color = \"white\"),\n    plot.title = element_text(size = 28, face = \"bold\", color = \"white\", family=\"Lato\"),\n    plot.subtitle = element_text(size = 20, color = \"yellow\",family=\"Lato\"),\n    axis.line.y = element_blank(),\n    axis.line.x = element_line(color = \"white\"),\n    panel.background = element_rect(fill=\"black\"),\n    plot.background = element_rect(fill =\"black\",color=\"black\"),\n  )+\n  labs(\n    title = \"Moon Phrase\",\n    subtitle = \"Aug.25 - Sep.15\",\n    y = NULL,\n    x = NULL,\n    caption = \"Data Source:R-suncalc\"\n  )\n\n\n\nggsave(filename = \"Moon-Phrase.pdf\", plot = last_plot(), height = 6, width = 8)\npdftools::pdf_convert(\n  pdf = \"Moon-Phrase.pdf\",\n  filenames = \"Moon-Phrase.png\",\n  format = \"png\", \n  dpi = 200\n)\n\nConverting page 1 to Moon-Phrase.png... done!\n\n\n[1] \"Moon-Phrase.png\"\n\n\nRef: https://www.r-bloggers.com/2018/05/making-calendar-with-ggplot-moon-phase-calendar-for-fun/"
  },
  {
    "objectID": "posts/draw-96wells/index.html",
    "href": "posts/draw-96wells/index.html",
    "title": "Draw a 96 wells with ggplot2",
    "section": "",
    "text": "Update version without set y level\n\nlibrary(tidyverse)\n\n# Generate \"well\" coordinates x , y\ny <- LETTERS[8:1] # just change LETTERS[1:8] to  LETTERS[8:1]\nx <- 1:12\n\n# Generate all the x, y combination and put into data.frame \"plate\"\nplate <- expand.grid(x,y)\n\n# Draw a 96-well\n\nggplot(plate,aes(Var1,Var2, color=Var2))+\n  geom_point(size=8)+\n  scale_x_continuous(breaks = seq(1,12,by=1), position = \"top\")+\n  scale_y_discrete(breaks=LETTERS[1:8])+\n  labs(x=NULL,\n       y=NULL)+\n  theme_bw()+\n  theme(legend.position = \"none\")"
  },
  {
    "objectID": "posts/sf-map/index.html",
    "href": "posts/sf-map/index.html",
    "title": "sf-map-heatmap",
    "section": "",
    "text": "Download map from China website(be cautious about border and official government data )\nChina Map geojson source website: https://geojson.cn/"
  },
  {
    "objectID": "posts/sf-map/index.html#example-1-map-to-map-heatmap",
    "href": "posts/sf-map/index.html#example-1-map-to-map-heatmap",
    "title": "sf-map-heatmap",
    "section": "Example 1: Map to Map-Heatmap",
    "text": "Example 1: Map to Map-Heatmap\n\nlibrary(sf)\n\nLinking to GEOS 3.9.1, GDAL 3.4.3, PROJ 7.2.1; sf_use_s2() is TRUE\n\nlibrary(tidyverse)\n\n── Attaching packages\n───────────────────────────────────────\ntidyverse 1.3.2 ──\n\n\n✔ ggplot2 3.4.0      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.4.1 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n\n\nWarning: package 'ggplot2' was built under R version 4.2.2\n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nlibrary(readxl)\nlibrary(hrbrthemes)\nsysfonts::font_add_google(\"Roboto Condensed\", family = \"Roboto Condensed\")\nsysfonts::font_families()\n\n[1] \"sans\"             \"serif\"            \"mono\"             \"Roboto Condensed\"\n\nshowtext::showtext.auto()\n\n'showtext.auto()' is now renamed to 'showtext_auto()'\nThe old version still works, but consider using the new function in future code\n\nchina_map <- st_read(dsn = \"https://geojson.cn/api/data/china.json\", stringsAsFactors = FALSE)\n\nReading layer `china' from data source `https://geojson.cn/api/data/china.json' using driver `GeoJSON'\nSimple feature collection with 36 features and 10 fields\nGeometry type: GEOMETRY\nDimension:     XY\nBounding box:  xmin: 73.50235 ymin: 17.9869 xmax: 135.0957 ymax: 53.56327\nGeodetic CRS:  WGS 84\n\n# china_map  \n\n\njingfei_china <- read_excel(here::here(\"posts/sf-map/jingfei-china.xlsx\")) %>% janitor::clean_names() %>% rename(name=de_qu)\n\nFilter data for plot map\n\nmap_china <- china_map  %>% select(-c(childrenNum:bbox)) \n\nmap_china <- left_join(map_china,jingfei_china,by=\"name\")\nmap_china$r_d_jing_fei <- as.numeric(map_china$r_d_jing_fei)\n\n\nmap_china %>%\n  ggplot() +\n  geom_sf(aes(fill = r_d_jing_fei)) +\n  scale_fill_gradient2(low = \"black\", mid = \"transparent\", high = \"red\") +\n  geom_sf_text(aes(label = name), colour = \"gray95\", size = 2) +\n  labs(\n    title = \"2021研究经费绝对量热度\",\n    caption = \"国家统计局 | 2021年全国科技经费投入统计公报 | Plotbyme\",\n    y = NULL,\n    x = NULL\n  ) +\n  theme_modern_rc() +\n  theme(\n    legend.position = \"none\",\n    plot.title = element_text(size = 22, hjust = .5, family = \"wqy-microhei\"),\n    plot.caption = element_text(hjust = 0.9,  family = \"wqy-microhei\")\n  )\n\nWarning in st_point_on_surface.sfc(sf::st_zm(x)): st_point_on_surface may not\ngive correct results for longitude/latitude data\n\n\n\n\n\n\n# save plot\n# name <- \"ResearchInvent_China2021\" # change the save filename here\n# ggsave(filename = glue::glue('{name}.pdf'), plot = last_plot(), \n#        height = 6, width = 8, units=\"in\", device=cairo_pdf)\n# pdftools::pdf_convert(\n#   pdf = glue::glue('{name}.pdf'),\n#   filenames = glue::glue('{name}.png'),\n#   format = \"png\", \n#   dpi = 600\n# )"
  },
  {
    "objectID": "posts/sf-map/index.html#example-2-coordinates-to-province-location",
    "href": "posts/sf-map/index.html#example-2-coordinates-to-province-location",
    "title": "sf-map-heatmap",
    "section": "Example 2: Coordinates to Province Location",
    "text": "Example 2: Coordinates to Province Location\n\nlibrary(sf)\nlibrary(tidyverse)\nlibrary(readxl)\n\nshowtext::showtext.auto()\n\nchina_map <- st_read(dsn = \"https://geojson.cn/api/data/china.json\", stringsAsFactors = FALSE)\n\nReading layer `china' from data source `https://geojson.cn/api/data/china.json' using driver `GeoJSON'\nSimple feature collection with 36 features and 10 fields\nGeometry type: GEOMETRY\nDimension:     XY\nBounding box:  xmin: 73.50235 ymin: 17.9869 xmax: 135.0957 ymax: 53.56327\nGeodetic CRS:  WGS 84\n\n\nlat,long read in\n\nmetro <- read_excel(here::here(\"posts/sf-map/metro.xlsx\"))\n\nmetro_df <- metro %>% select(\"Entity ID\",\"lon\",\"lat\")\n\nbasic china map\n\nmap_china <- china_map  %>% select(-c(childrenNum:bbox)) \n\n\nmap_china %>%\n  ggplot() +\n  geom_sf() +\n  geom_sf_text(aes(label = name))\n\nWarning in st_point_on_surface.sfc(sf::st_zm(x)): st_point_on_surface may not\ngive correct results for longitude/latitude data\n\n\n\n\n\n\nlibrary(sf)\n\n## pointsDF: A data.frame whose first column contains longitudes and\n##           whose second column contains latitudes.\n##\n## states:   An sf MULTIPOLYGON object with 50 states plus DC.\n##\n## name_col: Name of a column in `states` that supplies the states'\n##           names.\nlonlat_to_state <- function(pointsDF,\n                            states = map_china,\n                            name_col = \"name\") {\n    ## Convert points data.frame to an sf POINTS object\n    pts <- st_as_sf(pointsDF, coords = 1:2, crs = 4326)\n\n    ## Transform spatial data to some planar coordinate system\n    ## (e.g. Web Mercator) as required for geometric operations\n    states <- st_transform(states, crs = 3857)\n    pts <- st_transform(pts, crs = 3857)\n\n    ## Find names of state (if any) intersected by each point\n    state_names <- states[[name_col]]\n    ii <- as.integer(st_intersects(pts, states))\n    state_names[ii]\n}\n\n## Test the function with points in Wisconsin, Oregon, and France\ntestPoints <- data.frame(metro_df$lon, metro_df$lat)\n\n# lonlat_to_state(testPoints)\n\n\ntestPoints <- data.frame(metro_df$lon, metro_df$lat)\n\n# get coordinate to location,  modern province\nmetro_df$location <- lonlat_to_state(testPoints)\n\nmetro_df <- metro_df %>% select(-c(lon, lat))\n\nmetro_final <- left_join(metro, metro_df, by = \"Entity ID\") %>%\n  janitor::clean_names() %>%\n  unique()\n\nsummary number of sites in modern china province\n\ntable(metro_final$location) %>% sort(decreasing = TRUE)%>% knitr::kable()\n\n\n\n\nVar1\nFreq\n\n\n\n\n四川\n156\n\n\n河南\n121\n\n\n河北\n96\n\n\n陕西\n92\n\n\n山西\n91\n\n\n山东\n90\n\n\n江西\n67\n\n\n浙江\n67\n\n\n湖南\n58\n\n\n安徽\n57\n\n\n湖北\n57\n\n\n广西\n56\n\n\n福建\n44\n\n\n广东\n43\n\n\n江苏\n43\n\n\n重庆\n37\n\n\n甘肃\n26\n\n\n海南\n7\n\n\n上海\n2\n\n\n内蒙古\n1\n\n\n天津\n1\n\n\n宁夏\n1\n\n\n\n\n\nexport data.frame to excel\n\n# library(\"writexl\")\n# write_xlsx(metro_final,\"metro_final.xlsx\")\n\n\nsites <- data.frame(longitude = metro_final$lon, latitude = metro$lat)\n\nsites <- st_as_sf(sites,\n  coords = c(\"longitude\", \"latitude\"),\n  crs = 4326, agr = \"constant\")\n\nggplot(map_china) +\n  geom_sf() +\n  geom_sf_text(aes(label = name),color=\"black\") +\n  geom_sf(data = sites, size = .5, color = \"red\", alpha = .3)+\n  theme_void()\n\nWarning in st_point_on_surface.sfc(sf::st_zm(x)): st_point_on_surface may not\ngive correct results for longitude/latitude data"
  },
  {
    "objectID": "posts/rmarkdown-chinese-paper/index.html",
    "href": "posts/rmarkdown-chinese-paper/index.html",
    "title": "rmarkdown-latex-chinese-ctex",
    "section": "",
    "text": "### side by side plots\n\nset.seed(81)\nboxplot(rnorm(10))\nplot(rnorm(10),col=\"red\")\n\n\n\n\n\n\n\n````"
  },
  {
    "objectID": "posts/MolecularCloning/index.html#分子克隆总结",
    "href": "posts/MolecularCloning/index.html#分子克隆总结",
    "title": "Molecular Cloning Summary",
    "section": "分子克隆总结",
    "text": "分子克隆总结\n软件及网络工具：SnapGene , NEB Cloner 等\n连接方式：\n\nGibson Assembly, T4 ligase, Gateway, Infusion, TOPO etc.\n\nGibson Assembly:（5-6个片段连接同样有效，如果受条件制约试剂可以自行配置）\nTEDA Cloning(super-money-saving)\n\n► 优点：No scar, gene 可以连续连接并且没有”接缝”\n► 可以增加序列 也可以删除序列用于制造 将某个基因敲出， 引物合成的时候自然丢掉它\n► 注意点：因为它会将5’端 chowing back ，Vector的线性化是单一酶切位点切开线性化的，请注意它的粘性末端sticky end，5’ overhang 回导致被chowing back and disappear。如果不特意在引物中设计将原有酶切位点序列加以保留，连接后就会损失了这个酶切位点。 Tool box in NEB url: https://nebuilder.neb.com/ （可以选择是否修复酶切位点，in case you lost it for further use）\n► 特殊情况处理：如果遇到不能利用单一酶切位点线性化Vector怎么办?（ 如基因当中存在酶切位点，如果切开Vector同时会导致基因断裂）直接利用Overlap site:homology sequence 进行连接，有些片段可以用PCR的方式（推荐使用高保真Q5 polymerase，但是这个酶合成序列后是Blunt end，如果进一步构建library文库可以用Taq酶+dATP, 加入到PCR纯化后的产物中进行修复A tail, 找不到dATP就用dNTP（ATGC混合物），实际使用上没有差别），或者用单核苷酸序列（Oligos）人工合成序列（合成互补的两条链同时直接加入你想改造的想法：如加入突变的位点或者Kozak序列或者加入Mutiple cloning sites(poly-linker等)，不必一次合成过长价格很贵序列错率高，利用Gibson Assembly的优势分段合成组合即可）\n► Tips:人工合成两条Oligos 你甚至可以直接考虑他们互补配对后自然就有stricky end,这样就省去了PCR->跑胶->切胶纯化的步骤。 此外PCR产物可以考虑使用PCR purification Kit进行纯化，如果模板使用了一个完整的质粒，由于质粒是有甲基化位点的，而PCR没有甲基化位点可以用DpnI 酶先Digestion 然后Heat inactive 进行纯化。（能不跑胶就不要做，浪费时间，最后回收的DNA含有agarose也会影响连接的效率）。 不切的Vector酶的意义,许多人忽略不切Vector酶的意义然而这些酶如果在引物当中引入homology sequence-uncut restiction enzyme site sequece-homology seuquence 利用Gibson Assembly 一连接自然而然加入了克隆位点用于后期加装各种调控元件。"
  },
  {
    "objectID": "posts/bar-plot-with-labels/index.html",
    "href": "posts/bar-plot-with-labels/index.html",
    "title": "bar plot with labels",
    "section": "",
    "text": "# ggfittext to adjust the text position\nd %>% \n  ggplot(aes(x = value, y = fct_reorder(name, value)) ) +\n  geom_col(width = 0.6, fill = \"#99d594\") +\n  scale_x_continuous(expand = c(0, 0)) +\n  geom_bar_text(aes(label = d$value), \n                color = \"blue\", \n                vjust = 1, \n                # size = 4 * ggplot2::.pt, \n                # min.size = 4 * ggplot2::.pt,\n                # padding.x = grid::unit(0, \"pt\"),\n                # padding.y = grid::unit(0, \"pt\"),\n                outside = TRUE)+\n  labs(x = \"\",\n       y = \"\")+\n  theme_classic()"
  },
  {
    "objectID": "posts/apa-themes/index.html",
    "href": "posts/apa-themes/index.html",
    "title": "APA theme- ggplot2",
    "section": "",
    "text": "Christian https://christianburkhart.de/\nHow to set your APA 7 theme in RStudio Many researchers in the social sciences often need to create APA-style figures. Fortunately, there is a little trick that makes it easier to automatically set up an APA theme in ggplot2.\nhttps://ggplot2tor.com/tutorials/apa_theme_rprofile"
  },
  {
    "objectID": "posts/apa-themes/index.html#code-part",
    "href": "posts/apa-themes/index.html#code-part",
    "title": "APA theme- ggplot2",
    "section": "Code part",
    "text": "Code part\n\nlibrary(tidyverse)\n# Set theme\n  apa_theme <- theme(\n    plot.margin = unit(c(1, 1, 1, 1), \"cm\"),\n    plot.background = element_rect(fill = \"white\", color = NA),\n    plot.title = element_text(size = 22, face = \"bold\",\n                              hjust = 0.5,\n                              margin = margin(b = 15)),\n    axis.line = element_line(color = \"black\", size = .5),\n    axis.title = element_text(size = 18, color = \"black\",\n                              face = \"bold\"),\n    axis.text = element_text(size = 15, color = \"black\"),\n    axis.text.x = element_text(margin = margin(t = 10)),\n    axis.title.y = element_text(margin = margin(r = 10)),\n    axis.ticks = element_line(size = .5),\n    panel.grid = element_blank(),\n    legend.position = c(0.20, 0.8),\n    legend.background = element_rect(color = \"black\"),\n    legend.text = element_text(size = 15),\n    legend.margin = margin(t = 5, l = 5, r = 5, b = 5),\n    legend.key = element_rect(color = NA, fill = NA)\n  )\n  \n  theme_set(theme_minimal(base_size = 18) +\n            apa_theme)"
  },
  {
    "objectID": "posts/apa-themes/index.html#example",
    "href": "posts/apa-themes/index.html#example",
    "title": "APA theme- ggplot2",
    "section": "Example",
    "text": "Example\n\nAPA theme\n\npic <- ggplot(ToothGrowth) +\n aes(x = factor(dose), y = len, fill = supp, colour = supp) +\n geom_point(shape=ToothGrowth$supp,size = 1.5,position = position_dodge(0.2)) \npic\n\n\n\npic_apa <- pic+theme_set(theme_minimal(base_size = 18) +\n            apa_theme)\npic_apa"
  },
  {
    "objectID": "posts/apa-themes/index.html#my-own-theme",
    "href": "posts/apa-themes/index.html#my-own-theme",
    "title": "APA theme- ggplot2",
    "section": "my own theme",
    "text": "my own theme\n\npic_own <- pic+theme(\n    axis.title = element_text(size = 16, family = \"Roboto\"),\n    axis.text.x = element_text(size = 12, family = \"Roboto\"),\n    axis.text.y = element_text(size = 12, family = \"Roboto\"),\n    plot.title = element_text(size = 20, face = \"bold\", color = \"red2\", family = \"Lato\"),\n    plot.subtitle = element_text(size = 14, color = \"blue4\", family = \"Lato\"),\n    axis.line.x = element_line(color = \"gray8\"),\n    axis.line.y = element_line(color = \"gray8\"),\n    panel.background = element_rect(fill = \"white\",color = \"white\"),\n    panel.border = element_rect(fill = NA, size=1),\n    plot.background = element_rect(fill = \"white\",color = \"gray45\"),\n    legend.position = c(0.1, 0.8),\n    legend.background = element_rect(fill = NA),\n    legend.key = element_rect(fill = NA),\n    plot.margin = unit(c(.5, .5, .5, .5), \"cm\")\n  )\npic_own"
  },
  {
    "objectID": "posts/apa-themes/index.html#apa-theme-version-2-ref-httpsbookdown.orgcontent2015figures.html",
    "href": "posts/apa-themes/index.html#apa-theme-version-2-ref-httpsbookdown.orgcontent2015figures.html",
    "title": "APA theme- ggplot2",
    "section": "APA theme version 2 ref: https://bookdown.org/content/2015/figures.html",
    "text": "APA theme version 2 ref: https://bookdown.org/content/2015/figures.html\n\napatheme=theme_bw()+\n  theme(panel.grid.major=element_blank(),\n        panel.grid.minor=element_blank(),\n        panel.border=element_blank(),\n        axis.line=element_line(),\n        text=element_text(family='Arial'),\n        legend.title=element_blank(),\n        axis.text.y=element_text(size = 12),\n        axis.text.x=element_text(size = 12),\n        plot.tag = element_text(face = \"bold\"))\n\n# test apatheme version 2\npic + labs(tag=\"A\")+theme_bw()+\n  theme(panel.grid.major=element_blank(),\n        panel.grid.minor=element_blank(),\n        panel.border=element_blank(),\n        axis.line=element_line(),\n        text=element_text(family='Arial'),\n        legend.title=element_blank(),\n        axis.text.y=element_text(size = 12),\n        axis.text.x=element_text(size = 12),\n        plot.tag = element_text(face = \"bold\"))"
  },
  {
    "objectID": "posts/filter-na/index.html",
    "href": "posts/filter-na/index.html",
    "title": "Filter NAs in R tidyverse",
    "section": "",
    "text": "Cautious! Read in csv by read.csv() missing value will not be converted into NA\nGood solution: read_csv() in readr package missing value will convert into NA\n\nlibrary(palmerpenguins)\nlibrary(tidyverse)\n\n\n\nUse skimr::skim(penguins) to get a summmary describtion\n\nskimr::skim(penguins)\n\n\nData summary\n\n\nName\npenguins\n\n\nNumber of rows\n344\n\n\nNumber of columns\n8\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nfactor\n3\n\n\nnumeric\n5\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nspecies\n0\n1.00\nFALSE\n3\nAde: 152, Gen: 124, Chi: 68\n\n\nisland\n0\n1.00\nFALSE\n3\nBis: 168, Dre: 124, Tor: 52\n\n\nsex\n11\n0.97\nFALSE\n2\nmal: 168, fem: 165\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nbill_length_mm\n2\n0.99\n43.92\n5.46\n32.1\n39.23\n44.45\n48.5\n59.6\n▃▇▇▆▁\n\n\nbill_depth_mm\n2\n0.99\n17.15\n1.97\n13.1\n15.60\n17.30\n18.7\n21.5\n▅▅▇▇▂\n\n\nflipper_length_mm\n2\n0.99\n200.92\n14.06\n172.0\n190.00\n197.00\n213.0\n231.0\n▂▇▃▅▂\n\n\nbody_mass_g\n2\n0.99\n4201.75\n801.95\n2700.0\n3550.00\n4050.00\n4750.0\n6300.0\n▃▇▆▃▂\n\n\nyear\n0\n1.00\n2008.03\n0.82\n2007.0\n2007.00\n2008.00\n2009.0\n2009.0\n▇▁▇▁▇\n\n\n\n\n\n\n\nWrite a funtion to filter no need to specify the name of the columns\n\nrowAny <- function(x) rowSums(x) > 0 \n\npenguins %>%\n  filter(rowAny(\n    across(\n      .cols = everything(),\n      .fns = ~ is.na(.x)\n    )\n  ))\n\n# A tibble: 11 × 8\n   species island    bill_length_mm bill_depth_mm flipper_…¹ body_…² sex    year\n   <fct>   <fct>              <dbl>         <dbl>      <int>   <int> <fct> <int>\n 1 Adelie  Torgersen           NA            NA           NA      NA <NA>   2007\n 2 Adelie  Torgersen           34.1          18.1        193    3475 <NA>   2007\n 3 Adelie  Torgersen           42            20.2        190    4250 <NA>   2007\n 4 Adelie  Torgersen           37.8          17.1        186    3300 <NA>   2007\n 5 Adelie  Torgersen           37.8          17.3        180    3700 <NA>   2007\n 6 Adelie  Dream               37.5          18.9        179    2975 <NA>   2007\n 7 Gentoo  Biscoe              44.5          14.3        216    4100 <NA>   2007\n 8 Gentoo  Biscoe              46.2          14.4        214    4650 <NA>   2008\n 9 Gentoo  Biscoe              47.3          13.8        216    4725 <NA>   2009\n10 Gentoo  Biscoe              44.5          15.7        217    4875 <NA>   2009\n11 Gentoo  Biscoe              NA            NA           NA      NA <NA>   2009\n# … with abbreviated variable names ¹​flipper_length_mm, ²​body_mass_g\n\n\n\n\nuse if_any function but have specify the column names\n\npenguins %>% filter(if_any(c(species:year), ~ is.na(.)))\n\n# A tibble: 11 × 8\n   species island    bill_length_mm bill_depth_mm flipper_…¹ body_…² sex    year\n   <fct>   <fct>              <dbl>         <dbl>      <int>   <int> <fct> <int>\n 1 Adelie  Torgersen           NA            NA           NA      NA <NA>   2007\n 2 Adelie  Torgersen           34.1          18.1        193    3475 <NA>   2007\n 3 Adelie  Torgersen           42            20.2        190    4250 <NA>   2007\n 4 Adelie  Torgersen           37.8          17.1        186    3300 <NA>   2007\n 5 Adelie  Torgersen           37.8          17.3        180    3700 <NA>   2007\n 6 Adelie  Dream               37.5          18.9        179    2975 <NA>   2007\n 7 Gentoo  Biscoe              44.5          14.3        216    4100 <NA>   2007\n 8 Gentoo  Biscoe              46.2          14.4        214    4650 <NA>   2008\n 9 Gentoo  Biscoe              47.3          13.8        216    4725 <NA>   2009\n10 Gentoo  Biscoe              44.5          15.7        217    4875 <NA>   2009\n11 Gentoo  Biscoe              NA            NA           NA      NA <NA>   2009\n# … with abbreviated variable names ¹​flipper_length_mm, ²​body_mass_g"
  },
  {
    "objectID": "posts/machine-learning-process/index.html",
    "href": "posts/machine-learning-process/index.html",
    "title": "Learning progress of machine learning",
    "section": "",
    "text": "2022-Nov-10  Finished chapter 1,2 only scanning pdf docs Ongoing: Next chapter3 https://slds-lmu.github.io/i2ml/chapters/03_supervised_classification/03-01-tasks/"
  }
]