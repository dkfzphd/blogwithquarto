system.date
System.date
Sys.Date()
library(DT)
jingfei_china <- read_excel("posts//sf-map//jingfei-china.xlsx") %>% janitor::clean_names() %>% rename(name=de_qu)
library(sf)
library(tidyverse)
library(readxl)
library(hrbrthemes)
sysfonts::font_add_google("Roboto Condensed", family = "Roboto Condensed")
sysfonts::font_families()
showtext::showtext.auto()
china_map <- st_read(dsn = "https://geojson.cn/api/data/china.json", stringsAsFactors = FALSE)
# china_map
jingfei_china <- read_excel("posts//sf-map//jingfei-china.xlsx") %>% janitor::clean_names() %>% rename(name=de_qu)
jingfei_china <- read_excel("posts/sf-map/jingfei-china.xlsx") %>% janitor::clean_names() %>% rename(name=de_qu)
jingfei_china <- read_excel("posts/sf-map/jingfei-china.xlsx") %>% janitor::clean_names() %>% rename(name=de_qu)
library(sf)
library(tidyverse)
library(readxl)
library(hrbrthemes)
sysfonts::font_add_google("Roboto Condensed", family = "Roboto Condensed")
sysfonts::font_families()
showtext::showtext.auto()
china_map <- st_read(dsn = "https://geojson.cn/api/data/china.json", stringsAsFactors = FALSE)
# china_map
library(readxl)
jingfei_china <- read_excel("https://github.com/dkfzphd/blogbase/blob/main/jingfei-china.xlsx") %>% janitor::clean_names() %>% rename(name=de_qu)
library(sf)
library(tidyverse)
library(readxl)
library(hrbrthemes)
sysfonts::font_add_google("Roboto Condensed", family = "Roboto Condensed")
sysfonts::font_families()
showtext::showtext.auto()
china_map <- st_read(dsn = "https://geojson.cn/api/data/china.json", stringsAsFactors = FALSE)
# china_map
library(readxl)
jingfei_china <- read_excel("https://github.com/dkfzphd/blogbase/blob/main/jingfei-china.xlsx") %>% janitor::clean_names() %>% rename(name=de_qu)
library(sf)
library(tidyverse)
library(readxl)
library(hrbrthemes)
sysfonts::font_add_google("Roboto Condensed", family = "Roboto Condensed")
sysfonts::font_families()
showtext::showtext.auto()
china_map <- st_read(dsn = "https://geojson.cn/api/data/china.json", stringsAsFactors = FALSE)
# china_map
library(readxl)
url_Data <- "https://github.com/dkfzphd/blogbase/blob/main/jingfei-china.xlsx"
jingfei_china <- read_excel(url_Data) %>% janitor::clean_names() %>% rename(name=de_qu)
jingfei_china <- data.table::fread(url_Data) %>% janitor::clean_names() %>% rename(name=de_qu)
View(china_map)
library(sf)
library(tidyverse)
library(readxl)
library(hrbrthemes)
sysfonts::font_add_google("Roboto Condensed", family = "Roboto Condensed")
sysfonts::font_families()
showtext::showtext.auto()
china_map <- st_read(dsn = "https://geojson.cn/api/data/china.json", stringsAsFactors = FALSE)
# china_map
library(readxl)
url_Data <- "https://github.com/dkfzphd/blogbase/blob/main/jingfei-china.xlsx"
jingfei_china <- data.table::fread(url_Data) %>% janitor::clean_names() %>% jingfei_china$name <- jingfei_china$de_qu
jingfei_china <- data.table::fread(url_Data) %>% janitor::clean_names() %>% jingfei_china$name <- jingfei_china$de_qu
library(sf)
library(tidyverse)
library(readxl)
library(hrbrthemes)
sysfonts::font_add_google("Roboto Condensed", family = "Roboto Condensed")
sysfonts::font_families()
showtext::showtext.auto()
china_map <- st_read(dsn = "https://geojson.cn/api/data/china.json", stringsAsFactors = FALSE)
# china_map
jingfei_china <- read_excel(here::here("jingfei-china.xlsx")) %>% janitor::clean_names() %>% rename(name=de_qu)
library(sf)
library(tidyverse)
library(readxl)
library(hrbrthemes)
sysfonts::font_add_google("Roboto Condensed", family = "Roboto Condensed")
sysfonts::font_families()
showtext::showtext.auto()
china_map <- st_read(dsn = "https://geojson.cn/api/data/china.json", stringsAsFactors = FALSE)
# china_map
jingfei_china <- read_excel(here::here("post\sf-map\jingfei-china.xlsx")) %>% janitor::clean_names() %>% rename(name=de_qu)
library(sf)
library(tidyverse)
library(readxl)
library(hrbrthemes)
sysfonts::font_add_google("Roboto Condensed", family = "Roboto Condensed")
sysfonts::font_families()
showtext::showtext.auto()
china_map <- st_read(dsn = "https://geojson.cn/api/data/china.json", stringsAsFactors = FALSE)
# china_map
jingfei_china <- read_excel(here::here("posts\sf-map\jingfei-china.xlsx")) %>% janitor::clean_names() %>% rename(name=de_qu)
library(sf)
library(tidyverse)
library(readxl)
library(hrbrthemes)
sysfonts::font_add_google("Roboto Condensed", family = "Roboto Condensed")
library(sf)
library(tidyverse)
library(readxl)
library(hrbrthemes)
sysfonts::font_add_google("Roboto Condensed", family = "Roboto Condensed")
sysfonts::font_families()
showtext::showtext.auto()
china_map <- st_read(dsn = "https://geojson.cn/api/data/china.json", stringsAsFactors = FALSE)
# china_map
jingfei_china <- read_excel(here::here("posts/sf-map/jingfei-china.xlsx")) %>% janitor::clean_names() %>% rename(name=de_qu)
library(sf)
library(tidyverse)
library(readxl)
library(hrbrthemes)
sysfonts::font_add_google("Roboto Condensed", family = "Roboto Condensed")
sysfonts::font_families()
showtext::showtext.auto()
china_map <- st_read(dsn = "https://geojson.cn/api/data/china.json", stringsAsFactors = FALSE)
# china_map
jingfei_china <- read_excel(here::here("posts/sf-map/jingfei-china.xlsx")) %>% janitor::clean_names() %>% rename(name=de_qu)
map_china <- china_map  %>% select(-c(childrenNum:bbox))
map_china <- left_join(map_china,jingfei_china,by="name")
map_china$r_d_jing_fei <- as.numeric(map_china$r_d_jing_fei)
library(tidyverse)
library(gganimate)
library(ggthemes)
theme_set(theme_economist_white())
x <- seq(0,15,by=0.1)
y <- sin(x)+0.8*x+0.1*x^2
df1 <- tibble(x,y)
plot1 <- ggplot(df1,aes(x,y))+
geom_line(size=1,color='#e63946')+
geom_line(aes(x,1.9*x),size=1,color='black')+
geom_point(color='#03045e', alpha=0.5, size=3)+
labs(x="Time",
y="Ability")
plot1
animate1 <- plot1 +
transition_reveal(x)
animate1
animate(animate1, height = 800, width =800)
anim_save("animate1.gif", animate1)
# data from 王敏杰 老师
# his book https://bookdown.org/wangminjie/R4DS/author.html
d <- tibble::tribble(
~name, ~value,
"Alice",   2.12,
"Bob",  68.45,
"Carlie",  15.84,
"Dave",   7.38,
"Eve",   0.56
)
library(tidyverse)
library(ggfittext)
d %>%
ggplot(aes(x = value, y = fct_reorder(name, value)) ) +
geom_col(width = 0.6, fill = "gray45") +
geom_text(aes(label = value, hjust = 1))  +
theme_classic() +
scale_x_continuous(expand = c(0, 0)) +
labs(x = NULL, y = NULL)
# ggfittext to adjust the text position
d %>%
ggplot(aes(x = value, y = fct_reorder(name, value)) ) +
geom_col(width = 0.6, fill = "#99d594") +
scale_x_continuous(expand = c(0, 0)) +
geom_bar_text(aes(label = value),
color = "blue",
vjust = 1,
size = 4 * ggplot2::.pt,
min.size = 4 * ggplot2::.pt,
padding.x = grid::unit(0, "pt"),
padding.y = grid::unit(0, "pt"),
outside = TRUE)+
labs(x = "",
y = "")+
theme_classic()
# data from 王敏杰 老师
# his book https://bookdown.org/wangminjie/R4DS/author.html
d <- tibble::tribble(
~name, ~value,
"Alice",   2.12,
"Bob",  68.45,
"Carlie",  15.84,
"Dave",   7.38,
"Eve",   0.56
)
library(tidyverse)
library(ggfittext)
d %>%
ggplot(aes(x = value, y = fct_reorder(name, value)) ) +
geom_col(width = 0.6, fill = "gray45") +
geom_text(aes(label = value, hjust = 1))  +
theme_classic() +
scale_x_continuous(expand = c(0, 0)) +
labs(x = NULL, y = NULL)
# ggfittext to adjust the text position
d %>%
ggplot(aes(x = value, y = fct_reorder(name, value)) ) +
geom_col(width = 0.6, fill = "#99d594") +
scale_x_continuous(expand = c(0, 0)) +
geom_bar_text(aes(label = value),
color = "red",
vjust = 1,
size = 4 * ggplot2::.pt,
min.size = 4 * ggplot2::.pt,
padding.x = grid::unit(0, "pt"),
padding.y = grid::unit(0, "pt"),
outside = TRUE)+
labs(x = "",
y = "")+
theme_classic()
# ggfittext to adjust the text position
d %>%
ggplot(aes(x = value, y = fct_reorder(name, value)) ) +
geom_col(width = 0.6, fill = "#99d594") +
scale_x_continuous(expand = c(0, 0)) +
geom_bar_text(aes(label = value),
color = "blue",
vjust = 1,
size = 4 * ggplot2::.pt,
min.size = 4 * ggplot2::.pt,
padding.x = grid::unit(0, "pt"),
padding.y = grid::unit(0, "pt"),
outside = TRUE)+
labs(x = "",
y = "")+
theme_classic()
# ggfittext to adjust the text position
d %>%
ggplot(aes(x = value, y = fct_reorder(name, value)) ) +
geom_col(width = 0.6, fill = "#99d594") +
scale_x_continuous(expand = c(0, 0)) +
geom_bar_text(aes(label = value),
color = "blue",
vjust = 1,
size = 10 * ggplot2::.pt,
min.size = 4 * ggplot2::.pt,
padding.x = grid::unit(0, "pt"),
padding.y = grid::unit(0, "pt"),
outside = TRUE)+
labs(x = "",
y = "")+
theme_classic()
# ggfittext to adjust the text position
d %>%
ggplot(aes(x = value, y = fct_reorder(name, value)) ) +
geom_col(width = 0.6, fill = "#99d594") +
scale_x_continuous(expand = c(0, 0)) +
geom_text(aes(label = value),
color = "blue",
vjust = 1,
size = 4 * ggplot2::.pt,
min.size = 4 * ggplot2::.pt,
padding.x = grid::unit(0, "pt"),
padding.y = grid::unit(0, "pt"),
outside = TRUE)+
labs(x = "",
y = "")+
theme_classic()
# ggfittext to adjust the text position
d %>%
ggplot(aes(x = value, y = fct_reorder(name, value)) ) +
geom_col(width = 0.6, fill = "#99d594") +
scale_x_continuous(expand = c(0, 0)) +
geom_bar_text(aes(label = value),
color = "blue",
vjust = 1,
size = 4 * ggplot2::.pt,
min.size = 4 * ggplot2::.pt,
padding.x = grid::unit(0, "pt"),
padding.y = grid::unit(0, "pt"),
outside = TRUE)+
labs(x = "",
y = "")+
theme_classic()
?geom_bar_text
# ggfittext to adjust the text position
d %>%
ggplot(aes(x = value, y = fct_reorder(name, value)) ) +
geom_col(width = 0.6, fill = "#99d594") +
scale_x_continuous(expand = c(0, 0)) +
geom_bar_text(aes(label = value),
color = "blue",
vjust = 1,
# size = 4 * ggplot2::.pt,
# min.size = 4 * ggplot2::.pt,
# padding.x = grid::unit(0, "pt"),
# padding.y = grid::unit(0, "pt"),
outside = TRUE)+
labs(x = "",
y = "")+
theme_classic()
# ggfittext to adjust the text position
d %>%
ggplot(aes(x = value, y = fct_reorder(name, value)) ) +
geom_col(width = 0.6, fill = "#99d594") +
scale_x_continuous(expand = c(0, 0)) +
geom_bar_text(label = value,
color = "blue",
vjust = 1,
# size = 4 * ggplot2::.pt,
# min.size = 4 * ggplot2::.pt,
# padding.x = grid::unit(0, "pt"),
# padding.y = grid::unit(0, "pt"),
outside = TRUE)+
labs(x = "",
y = "")+
theme_classic()
# ggfittext to adjust the text position
d %>%
ggplot(aes(x = value, y = fct_reorder(name, value)) ) +
geom_col(width = 0.6, fill = "#99d594") +
scale_x_continuous(expand = c(0, 0)) +
geom_bar_text(aes(label = d$value),
color = "blue",
vjust = 1,
# size = 4 * ggplot2::.pt,
# min.size = 4 * ggplot2::.pt,
# padding.x = grid::unit(0, "pt"),
# padding.y = grid::unit(0, "pt"),
outside = TRUE)+
labs(x = "",
y = "")+
theme_classic()
ggplot(data=hour,aes(hour_x, hour_y)) +
geom_point(data=df, aes(x, y),color="blue") +
geom_path(data=hour,aes(0.5*hour_x, 0.5*hour_y),color="blue") +
geom_point(data=hour,aes(0.5*hour_x, 0.5*hour_y),color="blue") +
geom_point(size=8,color="red") +
# geom_path() +
geom_text(data=hour,aes(label = c(12,1:11,""))) +
geom_point(data=center,aes(x,y),size=4, color="black")+
coord_fixed()
library(tidyverse)
library(ggrepel)
theme_set(theme_minimal())
#这里理解有点绕弯
# 1. 从pi/2作为起点是因为正常坐标系和对应的时钟0点位置不同，要旋转pi/2
# 2.从pi/2顺时针旋转一周应该是 -2 * pi，顺时针意味着负号
# 3. length.out = 61 这里 从0到60的点一共是
#    61个点，点与点之间有60个分化，我们计算的是点坐标，因此要获得这61一个点的坐标位置length.out = 61
# 4. 同理小时计算的是时间12个分化，计算13个点的坐标length.out = 13
theta <- seq(pi / 2, -2 * pi + pi / 2 , length.out = 61)
radius <- seq(10, 30, length.out = 60)
min_radius <- 30
hour_radius <- 30
x <- min_radius* cos(theta)
y <- min_radius * sin(theta)
hour_tick <- seq(pi / 2, -2 * pi + pi / 2, length.out = 13)
hour_x <- hour_radius * cos(hour_tick)
hour_y <- hour_radius * sin(hour_tick)
df <- tibble(x, y)
hour <- tibble(hour_x, hour_y)
center <- tibble(x=0,y=0)
::: {.column width="60%"}
::: {.column width="40%"}
require(kableExtra)
kbl(mtcars[1:5,1:6], booktabs = T)
require(kableExtra)
kbl(mtcars[1:5,1:6], booktabs = T,"html")
dt <- mtcars[1:5,1:6]
dt%>%
kbl("latex",,caption = "Recreating booktabs style table") %>%
kable_classic(full_width = F, html_font = "Cambria")
require(kableExtra)
require(tidyverse)
dt <- mtcars[1:5,1:6]
dt%>%
kbl(caption = "Recreating booktabs style table") %>%
kable_classic(full_width = F, html_font = "Cambria")
dt <- mtcars[1:5,1:6]
dt%>%
kbl("latex",,caption = "Recreating booktabs style table") %>%
kable_classic(full_width = F, html_font = "Cambria")
dt <- mtcars[1:5,1:6]
dt%>%
kbl("latex",caption = "Recreating booktabs style table") %>%
kable_classic(full_width = F, html_font = "Cambria")
#|results='asis'
dt <- mtcars[1:5,1:6]
dt%>%
kbl("latex",caption = "Recreating booktabs style table") %>%
kable_classic(full_width = F, html_font = "Cambria")
dt%>%
kbl("latex",caption = "Recreating booktabs style table") %>%
kable_classic(full_width = F, html_font = "Cambria")
library(tidyverse)
theme_set(theme_bw())
#define range
p = seq(0, 1, by=0.001)
y <- dbeta(p, 2, 10)
#create plot of Beta distribution with shape parameters 2 and 10
plot(p, y, type='l', col=4)
areafunction <-  function(x) {
y <- dbeta(x, 2, 10)
y[x < 0.1  |  x > 0.45 ] <- NA
y[0.2< x & x < 0.3 ] <- NA
return(y)
}
betadf <- tibble(p,y)
ggplot(betadf,aes(p,y))+
geom_line()+
scale_x_continuous(breaks = c(0,1,.2,0.45,0.3,0.1))+
stat_function(fun = areafunction, geom = "area", fill="red", alpha=.3 )
library(tidyverse)
theme_set(theme_bw())
#define range
p = seq(0, 1, by=0.001)
y <- dbeta(p, 2, 10)
#create plot of Beta distribution with shape parameters 2 and 10
plot(p, y, type='l', col=4)
areafunction <-  function(x) {
y <- dbeta(x, 2, 10)
y[x < 0.1  |  x > 0.45 ] <- NA
y[0.2< x & x < 0.3 ] <- NA
return(y)
}
betadf <- tibble(p,y)
ggplot(betadf,aes(p,y))+
geom_line()+
scale_x_continuous(breaks = c(0,1,.2,0.45,0.3,0.1))+
stat_function(fun = areafunction, geom = "area", fill="blue", alpha=.3 )
sort(c(0,1,.2,0.45,0.3,0.1))
library(tidyverse)
theme_set(theme_bw())
#define range
p = seq(0, 1, by=0.001)
y <- dbeta(p, 2, 10)
#create plot of Beta distribution with shape parameters 2 and 10
plot(p, y, type='l', col=4)
areafunction <-  function(x) {
y <- dbeta(x, 2, 10)
y[x < 0.1  |  x > 0.45 ] <- NA
y[0.2< x & x < 0.3 ] <- NA
return(y)
}
betadf <- tibble(p,y)
ggplot(betadf,aes(p,y))+
geom_line()+
scale_x_continuous(breaks = c(0.00, 0.10, 0.20, 0.30, 0.45, 1.00))+
stat_function(fun = areafunction, geom = "area", fill="blue", alpha=.3 )
library(tidyverse)
theme_set(theme_bw())
#define range
p = seq(0, 1, by=0.001)
y <- dbeta(p, 2, 10)
#create plot of Beta distribution with shape parameters 2 and 10
plot(p, y, type='l', col=4)
areafunction <-  function(x) {
y <- dbeta(x, 2, 10)
y[x < 0.1  |  x > 0.45 ] <- NA
y[0.2< x & x < 0.3 ] <- NA
return(y)
}
betadf <- tibble(p,y)
ggplot(betadf,aes(p,y))+
geom_line()+
scale_x_continuous(breaks = c(0.00, 0.10, 0.20, 0.30, 0.45, 1.00))+
stat_function(fun = areafunction, geom = "area", fill="blue4", alpha=.3 )
library(tidyverse)
theme_set(theme_bw())
#define range
p = seq(0, 1, by=0.001)
y <- dbeta(p, 2, 10)
#create plot of Beta distribution with shape parameters 2 and 10
plot(p, y, type='l', col=4)
areafunction <-  function(x) {
y <- dbeta(x, 2, 10)
y[x < 0.1  |  x > 0.45 ] <- NA
y[0.2< x & x < 0.3 ] <- NA
return(y)
}
betadf <- tibble(p,y)
ggplot(betadf,aes(p,y))+
geom_line()+
scale_x_continuous(breaks = c(0.00, 0.10, 0.20, 0.30, 0.45, 1.00))+
stat_function(fun = areafunction, geom = "area", fill="red", alpha=.3 )
